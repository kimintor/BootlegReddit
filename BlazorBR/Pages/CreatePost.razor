@attribute [Authorize]
@page "/CreatePost"
@using HttpClients.ClientInterfaces
@using Domain.Models
@using Domain.DTOs
@using System.Security.Claims
@inject IPostService _postService;
<h3>Create Post</h3>
<div class="container">
    <div class="TitleDiv"><label>Title</label>
        <input type="text" @bind="Title"  @bind:event = "oninput" />
    </div>
    <div class="BodyDiv">
        <label>Body</label>
        <input type="text" @bind="Body" @bind:event = "oninput" />
    </div>
    <p>@msg</p>
    <button @onclick="Create">Create</button>
</div>
@code {
   [CascadingParameter]
   public Task<AuthenticationState> AuthState { get; set; } = null!;

    private string name = "";
    private string Title ="";
    private string Body = "";
    private string msg = "";
    private bool isLoggedIn;
    private string showModal;

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        showModal = "none";
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        isLoggedIn = user.Identity != null;
        
        if (!isLoggedIn) return;
        
        name = user.Identity!.Name!;
    }
    private void Create()
    {
        
        try
        {
            PostCreationDto postToCreate = new PostCreationDto(1, Title, Body);
            _postService.CreatePostAsync(postToCreate);
            Title = "";
            Body = "";
            showModal = "initial";
            msg = "Post created";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

}